/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
/* bfs */
class Solution {
public:
    int minDepth(TreeNode* root) {
     if(!root)
     return 0;
     queue<TreeNode*>pq;
     int depth=0;
     TreeNode* node;
     pq.push(root);
     while(!pq.empty())
     { int n=pq.size();
     depth+=1;
         while(n--)
         {
             node=pq.front();
             pq.pop();
             if(!node->left && !node->right)
             return depth;
             if(node->left)
             pq.push(node->left);

             if(node->right)
             pq.push(node->right);
            
         }
          
     }
        
 return 0;
    }
};
